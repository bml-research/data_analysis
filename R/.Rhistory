sd(df$Calories)/sqrt(length(df$Calories)) #can also be calculated using the plotrix package
by_category <- group_by(df, Category)
formatted_table(summarize_each(by_category, funs(mean, sd)))
by_category <- group_by(df, Category)
formatted_table(summarize_each(by_category, funs(mean, sd)) %>%
select(-Item_mean, -`Serving Size_mean`))
formatted_table(df %>%
group_by(Category) %>%
summarize_each(funs(mean, sd)) %>%
select(-Item_mean, -`Serving Size_mean`))
formatted_table(df %>%
group_by(Category) %>%
summarize(across(everything(), list(mean = mean, sd = sd))))
df %>%
group_by(Category) %>%
summarize_all(list(mean = mean, sd = sd))
df %>%
group_by(Category) %>%
summarize(across(-c(`Item`, `Serving Size`), list(mean = mean, sd = sd)))
formatted_table(df %>%
group_by(Category) %>%
summarize_all(list(mean = mean, sd = sd)))
formatted_table(df %>%
group_by(Category) %>%
summarize(across(-c(`Item`, `Serving Size`), list(mean = mean, sd = sd))))
knitr::opts_chunk$set(warning = FALSE, message = FALSE)
library(tidyverse)
library(kableExtra)
formatted_table <- function(df){
kbl(df) %>%
kable_styling(bootstrap_options = c("striped", "hover", "responsive"))
}
file_path <- "./files_10_data_analysis_exercises/exercise01/menu.csv"
df <- read_csv(file_path)
formatted_table(head(df))
min_cal <- min(df$Calories)
max_cal <- max(df$Calories)
mean_cal <- mean(df$Calories)
median_cal <- median(df$Calories)
min_fat <- min(df$`Calories from Fat`)
max_fat <- max(df$`Calories from Fat`)
mean_fat <- mean(df$`Calories from Fat`)
median_fat <- median(df$`Calories from Fat`)
results_ex1 <- tibble("measure" = c("minimum", "maximum", "mean", "median"),
"calories" = c(min_cal, max_cal, mean_cal, median_cal),
"calories from fat" = c(min_fat, max_fat, mean_fat, median_fat)
)
formatted_table(results_ex1)
"Summary data calories"
summary(df$Calories)
"Summary data calories from fat"
summary(df$`Calories from Fat`)
formatted_table(df[df$`Calories from Fat` == max(df$`Calories from Fat`), ])
formatted_table(filter(df, `Calories from Fat` == max(df$`Calories from Fat`)))
formatted_table(df[df$`Iron (% Daily Value)` == max(df$`Iron (% Daily Value)`), ])
formatted_table(filter(df, `Iron (% Daily Value)` == max(df$`Iron (% Daily Value)`)))
formatted_table(df %>%
arrange(Category, `Calories from Fat`) %>%
filter(Category == "Beef & Pork") %>%
slice(1:1))
formatted_table(df %>%
filter(Category == "Coffee & Tea" | Category == "Smoothies & Shakes") %>%
arrange(-`Carbohydrates`) %>%
slice(1:1))
formatted_table(df %>%
arrange(-`Saturated Fat`, `Carbohydrates`) %>%
slice(1:1))
nrow(df[df$Calories > 600, ])
nrow(df[df$Calories > 300 & df$Calories < 600, ])
nrow(df[df$Calories >= 300 & df$Calories < 600, ])
nrow(df[str_detect(df$`Serving Size`, "fl oz cup"), ])
formatted_table(df %>%
filter(Calories > 600))
df %>%
group_by(Item) %>%
filter(n()>1)
formatted_table(df %>%
filter(`Vitamin A (% Daily Value)` > 100))
knitr::opts_chunk$set(warning = FALSE, message = FALSE)
library(tidyverse)
library(kableExtra)
formatted_table <- function(df){
kbl(df) %>%
kable_styling(bootstrap_options = c("striped", "hover", "responsive"))
}
file_path <- "./files_10_data_analysis_exercises/exercise01/menu.csv"
df <- read_csv(file_path)
formatted_table(head(df))
min_cal <- min(df$Calories)
max_cal <- max(df$Calories)
mean_cal <- mean(df$Calories)
median_cal <- median(df$Calories)
min_fat <- min(df$`Calories from Fat`)
max_fat <- max(df$`Calories from Fat`)
mean_fat <- mean(df$`Calories from Fat`)
median_fat <- median(df$`Calories from Fat`)
results_ex1 <- tibble("measure" = c("minimum", "maximum", "mean", "median"),
"calories" = c(min_cal, max_cal, mean_cal, median_cal),
"calories from fat" = c(min_fat, max_fat, mean_fat, median_fat)
)
formatted_table(results_ex1)
"Summary data calories"
summary(df$Calories)
"Summary data calories from fat"
summary(df$`Calories from Fat`)
formatted_table(df[df$`Calories from Fat` == max(df$`Calories from Fat`), ])
formatted_table(filter(df, `Calories from Fat` == max(df$`Calories from Fat`)))
formatted_table(df[df$`Iron (% Daily Value)` == max(df$`Iron (% Daily Value)`), ])
formatted_table(filter(df, `Iron (% Daily Value)` == max(df$`Iron (% Daily Value)`)))
formatted_table(df %>%
arrange(Category, `Calories from Fat`) %>%
filter(Category == "Beef & Pork") %>%
slice(1:1))
formatted_table(df %>%
filter(Category == "Coffee & Tea" | Category == "Smoothies & Shakes") %>%
arrange(-`Carbohydrates`) %>%
slice(1:1))
formatted_table(df %>%
arrange(-`Saturated Fat`, `Carbohydrates`) %>%
slice(1:1))
nrow(df[df$Calories > 600, ])
nrow(df[df$Calories > 300 & df$Calories < 600, ])
nrow(df[str_detect(df$`Serving Size`, "fl oz cup"), ])
formatted_table(df %>%
filter(Calories > 600))
df %>%
group_by(Item) %>%
filter(n()>1)
formatted_table(df %>%
filter(`Vitamin A (% Daily Value)` > 100))
formatted_table(df %>%
filter(`Vitamin C (% Daily Value)` >= 100))
nrow(df %>%
filter(`Vitamin C (% Daily Value)` >= 100))
formatted_table(df %>%
group_by(Category) %>%
summarize("Mean Total Fat (% Daily Value)" = round(mean(`Total Fat (% Daily Value)`), 1),
"Mean Saturated Fat (% Daily Value)" = round(mean(`Saturated Fat (% Daily Value)`), 1),
"Mean Cholesterol (% Daily Value)" = round(mean(`Cholesterol (% Daily Value)`), 1)
))
knitr::opts_chunk$set(warning = FALSE, message = FALSE)
library(tidyverse)
library(kableExtra)
formatted_table <- function(df){
kbl(df) %>%
kable_styling(bootstrap_options = c("striped", "hover", "responsive"))
}
file_path <- "./files_12_data_visualization/file01_menu.csv"
df <- read_csv(file_path)
formatted_table(head(df))
summ_data <- df %>%
group_by(Category) %>%
summarize_each(mean) %>%
select(Category, Calories, `Calories from Fat`) %>%
rename(`Calories total` = `Calories`)
formatted_table(summ_data)
barplot(summ_data$`Calories from Fat`,
ylab = "Calories from fat",
ylim = c(0, max(summ_data$`Calories from Fat` + 50)),
names = summ_data$Category,
las = 2,
cex.names = 0.5,
col = "steelblue",
main = "Average of calories from fat for different categories")
p <- ggplot(data = summ_data, aes(x = Category, y = `Calories from Fat`)) +
geom_bar(stat="identity", fill="steelblue") +
labs(title="Average of calories from fat for different categories") +
theme(axis.text.x = element_text(angle = 45, hjust=1))
p
tidy_summ_data <- summ_data %>%
gather(`Calories total`, `Calories from Fat`, key = "Calories origin", value = "Amount of calories")
formatted_table(head(tidy_summ_data))
tidy_summ_data <- summ_data %>%
pivot_longer(`Calories total`:`Calories from fat`, names_to = "Calories origin", values_to = "Amount of calories")
tidy_summ_data <- summ_data %>%
pivot_longer(`Calories total`:`Calories from Fat`, names_to = "Calories origin", values_to = "Amount of calories")
formatted_table(head(tidy_summ_data))
tidy_summ_data <- summ_data %>%
pivot_longer(`Calories total`:`Calories from Fat`, names_to = "Calories origin", values_to = "Amount of calories")
formatted_table(head(tidy_summ_data))
p <- ggplot(data = tidy_summ_data, aes(x = Category, y = `Amount of calories`, fill = `Calories origin`)) +
geom_bar(stat = "identity", position="dodge") +
labs(title="Average of calories from fat for different categories") +
theme(axis.text.x = element_text(angle = 45, hjust=1))
p
p <- ggplot(data = tidy_summ_data, aes(x = Category, y = `Amount of calories`, fill = `Calories origin`)) +
geom_bar(stat = "identity", position="stack") +
labs(title="Average of calories from fat for different categories") +
theme(axis.text.x = element_text(angle = 45, hjust=1))
p
p <- ggplot(data = tidy_summ_data, aes(x = Category, y = `Amount of calories`, fill = `Calories origin`)) +
geom_bar(stat = "identity", position="fill") +
labs(title="Average of calories from fat for different categories", y = "Fraction of calories") +
theme(axis.text.x = element_text(angle = 45, hjust=1))
p
tidy_summ_data$`Calories origin` <- factor(tidy_summ_data$`Calories origin`, levels = c("Calories total", "Calories from Fat"))
levels(tidy_summ_data$`Calories origin`)
p <- ggplot(data = tidy_summ_data, aes(x = Category, y = `Amount of calories`, fill = `Calories origin`)) +
geom_bar(stat = "identity", position="dodge") +
labs(title="Average of calories from fat for different categories") +
theme(axis.text.x = element_text(angle = 45, hjust=1))
p
p <- ggplot(data = tidy_summ_data, aes(x = Category, y = `Amount of calories`, fill = `Calories origin`)) +
geom_bar(stat = "identity", position="fill") +
labs(title="Average of calories from fat for different categories", y = "Fraction of calories") +
theme(axis.text.x = element_text(angle = 45, hjust=1))
p
p <- ggplot(tidy_summ_data, aes(x = "", y = `Amount of calories`, fill = `Category`)) +
geom_bar(stat="identity", width=1) +
coord_polar("y", start=0) +
labs(title="Average of calories from fat for different categories") +
theme_void() # remove background, grid, numeric labels
p
file_path <- "./files_12_data_visualization/file02_radar_data.csv"
rest_data <- read_csv(file_path)
formatted_table(rest_data)
rest_data_long <- rest_data %>% pivot_longer(cols= -1)
formatted_table(rest_data_long)
rest_data_long <- rest_data %>% pivot_longer(cols= -1, name="name", value="value")
tidy_summ_data <- summ_data %>%
pivot_longer(`Calories total`:`Calories from Fat`, names_to = "Calories origin", values_to = "Amount of calories")
formatted_table(head(tidy_summ_data))
tidy_summ_data$`Calories origin` <- factor(tidy_summ_data$`Calories origin`, levels = c("Calories total", "Calories from Fat"))
levels(tidy_summ_data$`Calories origin`)
rest_data_long <- rest_data %>% pivot_longer(cols= -1)
formatted_table(rest_data_long)
rest_data_trans <- rest_data_long %>%
pivot_wider(names_from = Category,values_from = value)
formatted_table(rest_data_trans)
rest_data_trans <- rest_data_trans %>% rename("Restaurant" = `name`)
formatted_table(rest_data_trans)
rest_data_scaled <- rest_data_trans[, -1]/1000
formatted_table(rest_data_scaled)
first_col <- rest_data_trans[, 1]
formatted_table(first_col)
rest_data <- cbind(first_col, rest_data_scaled)
formatted_table(rest_data)
library(ggradar)
install.packages("ggradar")
library(ggradar)
install.packages(ggradar)
install.packages("remotes")
remotes::install_github("ricardo-bion/ggradar"
)
library(ggradar)
p <- ggradar(rest_data,  legend.text.size = 8, values.radar = c("0", "500", "1000"), axis.label.size = 3, grid.label.size = 3, legend.position = "right") +
labs(title = "Calories from fat in different \nfood categories from different \nrestaurants") +
theme(plot.title = element_text(size = 14, ))
p
file_path <- "./files_12_data_visualization/file01_menu.csv"
df_menu <- read_csv(file_path) %>% rename(`Calories total` = `Calories`)
formatted_table(head(df_menu))
p <- ggplot(df_menu, aes(x = `Category`, y = `Calories total`)) +
geom_boxplot() +
labs(title="Calories from fat for different food categories") +
theme(axis.text.x = element_text(angle = 45, hjust=1))
p
df_menu_trunc <- df_menu[, c(1, 2, 4, 5)]
formatted_table(head(df_menu_trunc))
tidy_menu <- df_menu_trunc %>%
#gather(`Calories total`, `Calories from Fat`, key = "Calories origin", value = "Amount of calories")
pivot_longer(`Calories total`, `Calories from Fat`, names_to = "Calories origin", values_to = "Amount of calories")
tidy_menu <- df_menu_trunc %>%
#gather(`Calories total`, `Calories from Fat`, key = "Calories origin", value = "Amount of calories")
pivot_longer(`Calories total`:`Calories from Fat`, names_to = "Calories origin", values_to = "Amount of calories")
formatted_table(head(tidy_menu))
p <- ggplot(tidy_menu, aes(x = `Category`, y = `Amount of calories`, fill = `Calories origin`)) +
geom_boxplot() +
labs(title="Calories from fat for different food categories") +
theme(axis.text.x = element_text(angle = 45, hjust=1))
p
tidy_menu$`Calories origin` <- factor(tidy_menu$`Calories origin`, levels = c("Calories total", "Calories from Fat"))
levels(tidy_menu$`Calories origin`)
p <- ggplot(tidy_menu, aes(x = `Category`, y = `Amount of calories`, fill = `Calories origin`)) +
geom_boxplot() +
labs(title="Calories from fat for different food categories") +
theme(axis.text.x = element_text(angle = 45, hjust=1))
p
p <- ggplot(df_menu, aes(x = `Category`, y = `Calories total`)) +
geom_violin() +
labs(title="Calories from fat for different food categories") +
theme(axis.text.x = element_text(angle = 45, hjust=1))
p
library(readxl)
file_path <- "./files_12_data_visualization/file03_weight_loss.xlsx"
weight_loss <- read_excel(file_path)
formatted_table(head(weight_loss))
tidy_weight_loss <- weight_loss %>%
gather(`Diet 1`, `Diet 2`, `Diet 3`, key = "Diet", value = "Weight (kg)")
pivot_longer(startswith="Diet"), names_to = "Diet", values_to = "Weight (kg)")
tidy_weight_loss <- weight_loss %>%
gather(`Diet 1`, `Diet 2`, `Diet 3`, key = "Diet", value = "Weight (kg)")
pivot_longer(cols = startswith("Diet"), names_to = "Diet", values_to = "Weight (kg)")
tidy_weight_loss <- weight_loss %>%
#gather(`Diet 1`, `Diet 2`, `Diet 3`, key = "Diet", value = "Weight (kg)")
pivot_longer(cols = startswith("Diet"), names_to = "Diet", values_to = "Weight (kg)")
tidy_weight_loss <- weight_loss %>%
#gather(`Diet 1`, `Diet 2`, `Diet 3`, key = "Diet", value = "Weight (kg)")
pivot_longer(cols = starts_with("Diet"), names_to = "Diet", values_to = "Weight (kg)")
formatted_table(head(tidy_weight_loss))
p <- ggplot(data= tidy_weight_loss, aes(x = Date, y = `Weight (kg)`, group = `Diet`)) +
geom_line() +
labs(title="Weight loss from three different diets")
p
p <- ggplot(data= tidy_weight_loss, aes(x = Date, y = `Weight (kg)`, group = `Diet`)) +
geom_line(aes(linetype = `Diet`)) +
labs(title="Weight loss from three different diets")
p
chickwts_diet1 <- ChickWeight %>% filter(Diet == 1)
formatted_table(head(chickwts_diet1))
p <- ggplot(data= tidy_weight_loss, aes(x = Date, y = `Weight (kg)`, group = `Diet`)) +
geom_line(aes(color = `Diet`)) +
labs(title="Weight loss from three different diets")
p
p <- ggplot(chickwts_diet1, aes(x = Time, y = weight)) +
geom_point() +
labs(title="Chicken weigth")
p
p <- ggplot(chickwts_diet1, aes(x = Time, y = weight)) +
geom_point() +
labs(title="Chicken weigth") +
geom_smooth(method="lm")
p
library(readxl)
file_path <- "./files_12_data_visualization/file04_bubble_chart.xlsx"
bubble_data <- read_excel(file_path)
formatted_table(head(bubble_data))
p <- ggplot(bubble_data, aes(x = `Sugar Content (g/serving)`, y = `Vitamin C content (mg/serving)`)) +
geom_point(aes(color = Fruit, size = `Number of servings per year`), alpha = 0.5) +
scale_size(range = c(0.5, 12))
p
p <- ggplot(bubble_data, aes(x = `Sugar Content (g/serving)`, y = `Vitamin C content (mg/serving)`)) +
geom_point(aes(color = Fruit, size = `Number of servings per year`), alpha = 0.5) +
scale_size_area(range = c(0.5, 12))
p <- ggplot(bubble_data, aes(x = `Sugar Content (g/serving)`, y = `Vitamin C content (mg/serving)`)) +
geom_point(aes(color = Fruit, size = `Number of servings per year`), alpha = 0.5) +
scale_size(range = c(0.5, 12)) +
scale_size_area()
p
p <- ggplot(bubble_data, aes(x = `Sugar Content (g/serving)`, y = `Vitamin C content (mg/serving)`)) +
geom_point(aes(color = Fruit, size = `Number of servings per year`), alpha = 0.5) +
#scale_size(range = c(0.5, 12)) +
scale_size_area()
p
p <- ggplot(bubble_data, aes(x = `Sugar Content (g/serving)`, y = `Vitamin C content (mg/serving)`)) +
geom_point(aes(color = Fruit, size = `Number of servings per year`), alpha = 0.5) +
#scale_size(range = c(0.5, 12)) +
scale_size_area(max_size=50)
p
p <- ggplot(bubble_data, aes(x = `Sugar Content (g/serving)`, y = `Vitamin C content (mg/serving)`)) +
geom_point(aes(color = Fruit, size = `Number of servings per year`), alpha = 0.5) +
#scale_size(range = c(0.5, 12)) +
scale_size_area(max_size=10)
p
p <- ggplot(bubble_data, aes(x = `Sugar Content (g/serving)`, y = `Vitamin C content (mg/serving)`)) +
geom_point(aes(color = Fruit, size = `Number of servings per year`), alpha = 0.5) +
scale_size_area(max_size=10)
p
knitr::opts_chunk$set(warning = FALSE, message = FALSE)
library(tidyverse)
library(kableExtra)
formatted_table <- function(df){
kbl(df) %>%
kable_styling(bootstrap_options = c("striped", "hover", "responsive"))
}
file_path <- "./files_12_data_visualization/file01_menu.csv"
df <- read_csv(file_path)
formatted_table(head(df))
summ_data <- df %>%
group_by(Category) %>%
summarize_each(mean) %>%
select(Category, Calories, `Calories from Fat`) %>%
rename(`Calories total` = `Calories`)
formatted_table(summ_data)
barplot(summ_data$`Calories from Fat`,
ylab = "Calories from fat",
ylim = c(0, max(summ_data$`Calories from Fat` + 50)),
names = summ_data$Category,
las = 2,
cex.names = 0.5,
col = "steelblue",
main = "Average of calories from fat for different categories")
p <- ggplot(data = summ_data, aes(x = Category, y = `Calories from Fat`)) +
geom_bar(stat="identity", fill="steelblue") +
labs(title="Average of calories from fat for different categories") +
theme(axis.text.x = element_text(angle = 45, hjust=1))
p
tidy_summ_data <- summ_data %>%
pivot_longer(`Calories total`:`Calories from Fat`, names_to = "Calories origin", values_to = "Amount of calories")
formatted_table(head(tidy_summ_data))
p <- ggplot(data = tidy_summ_data, aes(x = Category, y = `Amount of calories`, fill = `Calories origin`)) +
geom_bar(stat = "identity", position="dodge") +
labs(title="Average of calories from fat for different categories") +
theme(axis.text.x = element_text(angle = 45, hjust=1))
p
p <- ggplot(data = tidy_summ_data, aes(x = Category, y = `Amount of calories`, fill = `Calories origin`)) +
geom_bar(stat = "identity", position="stack") +
labs(title="Average of calories from fat for different categories") +
theme(axis.text.x = element_text(angle = 45, hjust=1))
p
p <- ggplot(data = tidy_summ_data, aes(x = Category, y = `Amount of calories`, fill = `Calories origin`)) +
geom_bar(stat = "identity", position="fill") +
labs(title="Average of calories from fat for different categories", y = "Fraction of calories") +
theme(axis.text.x = element_text(angle = 45, hjust=1))
p
tidy_summ_data$`Calories origin` <- factor(tidy_summ_data$`Calories origin`, levels = c("Calories total", "Calories from Fat"))
levels(tidy_summ_data$`Calories origin`)
p <- ggplot(data = tidy_summ_data, aes(x = Category, y = `Amount of calories`, fill = `Calories origin`)) +
geom_bar(stat = "identity", position="dodge") +
labs(title="Average of calories from fat for different categories") +
theme(axis.text.x = element_text(angle = 45, hjust=1))
p
p <- ggplot(data = tidy_summ_data, aes(x = Category, y = `Amount of calories`, fill = `Calories origin`)) +
geom_bar(stat = "identity", position="fill") +
labs(title="Average of calories from fat for different categories", y = "Fraction of calories") +
theme(axis.text.x = element_text(angle = 45, hjust=1))
p
p <- ggplot(tidy_summ_data, aes(x = "", y = `Amount of calories`, fill = `Category`)) +
geom_bar(stat="identity", width=1) +
coord_polar("y", start=0) +
labs(title="Average of calories from fat for different categories") +
theme_void() # remove background, grid, numeric labels
p
file_path <- "./files_12_data_visualization/file02_radar_data.csv"
rest_data <- read_csv(file_path)
formatted_table(rest_data)
rest_data_long <- rest_data %>% pivot_longer(cols= -1)
formatted_table(rest_data_long)
rest_data_trans <- rest_data_long %>%
pivot_wider(names_from = Category,values_from = value)
formatted_table(rest_data_trans)
rest_data_trans <- rest_data_trans %>% rename("Restaurant" = `name`)
formatted_table(rest_data_trans)
rest_data_scaled <- rest_data_trans[, -1]/1000
formatted_table(rest_data_scaled)
first_col <- rest_data_trans[, 1]
formatted_table(first_col)
rest_data <- cbind(first_col, rest_data_scaled)
formatted_table(rest_data)
library(ggradar)
p <- ggradar(rest_data,  legend.text.size = 8, values.radar = c("0", "500", "1000"), axis.label.size = 3, grid.label.size = 3, legend.position = "right") +
labs(title = "Calories from fat in different \nfood categories from different \nrestaurants") +
theme(plot.title = element_text(size = 14, ))
p
file_path <- "./files_12_data_visualization/file01_menu.csv"
df_menu <- read_csv(file_path) %>% rename(`Calories total` = `Calories`)
formatted_table(head(df_menu))
p <- ggplot(df_menu, aes(x = `Category`, y = `Calories total`)) +
geom_boxplot() +
labs(title="Calories from fat for different food categories") +
theme(axis.text.x = element_text(angle = 45, hjust=1))
p
df_menu_trunc <- df_menu[, c(1, 2, 4, 5)]
formatted_table(head(df_menu_trunc))
tidy_menu <- df_menu_trunc %>%
pivot_longer(`Calories total`:`Calories from Fat`, names_to = "Calories origin", values_to = "Amount of calories")
formatted_table(head(tidy_menu))
p <- ggplot(tidy_menu, aes(x = `Category`, y = `Amount of calories`, fill = `Calories origin`)) +
geom_boxplot() +
labs(title="Calories from fat for different food categories") +
theme(axis.text.x = element_text(angle = 45, hjust=1))
p
tidy_menu$`Calories origin` <- factor(tidy_menu$`Calories origin`, levels = c("Calories total", "Calories from Fat"))
levels(tidy_menu$`Calories origin`)
p <- ggplot(tidy_menu, aes(x = `Category`, y = `Amount of calories`, fill = `Calories origin`)) +
geom_boxplot() +
labs(title="Calories from fat for different food categories") +
theme(axis.text.x = element_text(angle = 45, hjust=1))
p
p <- ggplot(df_menu, aes(x = `Category`, y = `Calories total`)) +
geom_violin() +
labs(title="Calories from fat for different food categories") +
theme(axis.text.x = element_text(angle = 45, hjust=1))
p
library(readxl)
file_path <- "./files_12_data_visualization/file03_weight_loss.xlsx"
weight_loss <- read_excel(file_path)
formatted_table(head(weight_loss))
tidy_weight_loss <- weight_loss %>%
pivot_longer(cols = starts_with("Diet"), names_to = "Diet", values_to = "Weight (kg)")
formatted_table(head(tidy_weight_loss))
p <- ggplot(data= tidy_weight_loss, aes(x = Date, y = `Weight (kg)`, group = `Diet`)) +
geom_line() +
labs(title="Weight loss from three different diets")
p
p <- ggplot(data= tidy_weight_loss, aes(x = Date, y = `Weight (kg)`, group = `Diet`)) +
geom_line(aes(linetype = `Diet`)) +
labs(title="Weight loss from three different diets")
p
p <- ggplot(data= tidy_weight_loss, aes(x = Date, y = `Weight (kg)`, group = `Diet`)) +
geom_line(aes(color = `Diet`)) +
labs(title="Weight loss from three different diets")
p
chickwts_diet1 <- ChickWeight %>% filter(Diet == 1)
formatted_table(head(chickwts_diet1))
p <- ggplot(chickwts_diet1, aes(x = Time, y = weight)) +
geom_point() +
labs(title="Chicken weigth")
p
p <- ggplot(chickwts_diet1, aes(x = Time, y = weight)) +
geom_point() +
labs(title="Chicken weigth") +
geom_smooth(method="lm")
p
library(readxl)
file_path <- "./files_12_data_visualization/file04_bubble_chart.xlsx"
bubble_data <- read_excel(file_path)
formatted_table(head(bubble_data))
p <- ggplot(bubble_data, aes(x = `Sugar Content (g/serving)`, y = `Vitamin C content (mg/serving)`)) +
geom_point(aes(color = Fruit, size = `Number of servings per year`), alpha = 0.5) +
scale_size_area(max_size=10)
p
