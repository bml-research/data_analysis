geom_point() +
labs(title="Chicken weigth")
p
p <- ggplot(chickwts_diet1, aes(x = Time, y = weight)) +
geom_point() +
labs(title="Chicken weigth") +
geom_smooth(method="lm")
p
library(readxl)
file_path <- "./files_12_data_visualization/file04_bubble_chart.xlsx"
bubble_data <- read_excel(file_path)
formatted_table(head(bubble_data))
p <- ggplot(bubble_data, aes(x = `Sugar Content (g/serving)`, y = `Vitamin C content (mg/serving)`)) +
geom_point(aes(color = Fruit, size = `Number of servings per year`), alpha = 0.5) +
scale_size(range = c(0.5, 12))
p
knitr::opts_chunk$set(warning = FALSE, message = FALSE)
library("tidyverse")
#Your code here
#Your code here
#Your code here
#Your code here
#Your code here
#Your code here
#Your code here
#Your code here
#Your code here
#Your code here
#Your code here
knitr::opts_chunk$set(warning = FALSE, message = FALSE)
library("tidyverse")
library(kableExtra)
formatted_table <- function(df){
kbl(df) %>%
kable_styling(bootstrap_options = c("striped", "hover", "responsive"))
}
file_path_ex1 <- "./files_13_data_visualization_exercises/exercise01/Food_Product_Emissions.csv"
df_ex1 <- read_csv(file_path_ex1)
formatted_table(head(df_ex1))
barplot(df_ex1$`Total Global Average GHG Emissions per kg`,
ylab = "Total Global Average GHG Emissions per kg",
ylim = c(0, max(df_ex1$`Total Global Average GHG Emissions per kg` + 20)),
names = df_ex1$`Food product`,
las = 2,
cex.names = 0.5,
col = "steelblue",
main = "Food Product Emissions")
log2(8)
`Log2 Total Global Average GHG Emissions per kg` <- log2(df_ex1$`Total Global Average GHG Emissions per kg`)
df_ex2 <- df_ex1 %>%
add_column(`Log2 Total Global Average GHG Emissions per kg`)
formatted_table(head(df_ex2))
barplot(df_ex2$`Log2 Total Global Average GHG Emissions per kg`,
ylab = "Log2 Total Global Average GHG Emissions per kg",
ylim = c(min(df_ex2$`Log2 Total Global Average GHG Emissions per kg` - 4), max(df_ex2$`Log2 Total Global Average GHG Emissions per kg` + 4)),
names = df_ex2$`Food product`,
las = 2,
cex.names = 0.5,
col = "steelblue",
main = "Food Product Emissions")
df_ex3 <- df_ex1[str_detect(df_ex1$`Food product`, "Oil"), ]
formatted_table(df_ex3)
df_ex3$`Land Use Change` <- NULL
df_ex3$Feed <- NULL
df_ex3 <- df_ex3[, 1:6]
formatted_table(df_ex3)
tidy_df_ex3 <- df_ex3 %>%
gather(`Farm`, `Processing`, `Transport`, `Packaging`, `Retail`, key = "Emission origin", value = "Emission per kg")
formatted_table(head(tidy_df_ex3))
p <- ggplot(data = tidy_df_ex3, aes(x = `Food product`, y = `Emission per kg`, fill = `Emission origin`)) +
geom_bar(stat = "identity", position="dodge") +
labs(title="Food Product Emissions") +
theme(axis.text.x = element_text(angle = 45, hjust=1))
p
p <- ggplot(data = tidy_df_ex3, aes(x = `Food product`, y = `Emission per kg`, fill = `Emission origin`)) +
geom_bar(stat = "identity", position="stack") +
labs(title="Food Product Emissions") +
theme(axis.text.x = element_text(angle = 45, hjust=1))
p
p <- ggplot(data = tidy_df_ex3, aes(x = `Food product`, y = `Emission per kg`, fill = `Emission origin`)) +
geom_bar(stat = "identity", position="fill") +
labs(title="Food Product Emissions") +
theme(axis.text.x = element_text(angle = 45, hjust=1))
p
p <- ggplot(tidy_df_ex3, aes(x = "", y = `Emission per kg`, fill = `Emission origin`)) +
geom_bar(stat="identity", width=1) +
coord_polar("y", start=0) +
labs(title="Food Product Emissions") +
theme_void() # remove background, grid, numeric labels
p
file_path <- "./files_13_data_visualization_exercises/exercise07/calories.csv"
df_ex7 <- read_csv(file_path)
formatted_table(head(df_ex7))
df_ex7 <- df_ex7 %>%
separate_wider_delim(Cals_per100grams, delim = " ", names = c("Cals_per100grams", "waste")) %>%
separate_wider_delim(KJ_per100grams, delim = " ", names = c("KJ_per100grams", "waste2")) %>%
select (-c(waste, waste2)) %>% #Note that this is a negative selection. Selects all but the listed columns.
mutate_at(c('Cals_per100grams', 'KJ_per100grams'), as.numeric) #Creates numbers from strings
formatted_table(head(df_ex7))
p <- ggplot(df_ex7, aes(x = `FoodCategory`, y = `KJ_per100grams`)) +
geom_boxplot() +
labs(title="Energy per weight in different food categories") +
theme(axis.text.x = element_text(angle = 45, hjust=1)) +
ylab("Energy Density (KJ per 100 grams)") +
xlab("Food Category")
p
file_path <- "./files_13_data_visualization_exercises/exercise08/ChickWeight.csv"
df_ex8 <- read_tsv(file_path)
formatted_table(df_ex8)
library(ggradar)
df_ex8_scaled <- df_ex8[, -1]/400
formatted_table(df_ex8_scaled)
first_col <- df_ex8[, 1]
formatted_table(first_col)
df_ex8_mod <- cbind(first_col, df_ex8_scaled)
formatted_table(df_ex8_mod)
p <- ggradar(df_ex8_mod,  legend.text.size = 8, values.radar = c("0", "200", "400"), axis.label.size = 3, grid.label.size = 3, legend.position = "right") +
labs(title = "Chick weight from different diets at day 42") +
theme(plot.title = element_text(size = 14, ))
p
file_path <- "./files_13_data_visualization_exercises/exercise09/data.csv"
df_ex9 <- read_delim(file_path, delim=" ")
df_ex9$...6 <- NULL
formatted_table(head(df_ex9))
p <- ggplot(df_ex9, aes(x = `Potassium_conc`, y = `Sodium_conc`)) +
geom_point(aes(size = `Calories`), alpha = 0.5) +
scale_size(range = c(0.5, 12)) +
geom_text(aes(label=Item)) +
xlab("Potassium concentration (mg/100 g)") +
ylab("Sodium concentration (mg/100 g)")
p
file_path <- "./files_13_data_visualization_exercises/exercise10/meat-production-tonnes.csv"
df_ex10 <- read_csv(file_path)
df_ex10 <- rename(df_ex10, `Total mass (tonnes)`= `Meat, total | 00001765 || Production | 005510 || tonnes`)
formatted_table(head(df_ex10))
df_ex10_asia <- df_ex10 %>%
filter(Entity == "Asia")
formatted_table(head(df_ex10_asia))
p <- ggplot(data= df_ex10_asia, aes(x = Year, y = `Total mass (tonnes)`)) +
geom_line() +
labs(title="Meat production in Asia")
p
p <- ggplot(data= df_ex10_asia, aes(x = Year, y = `Total mass (tonnes)`)) +
geom_point() +
labs(title="Meat production in Asia")
p
file_path <- "./files_13_data_visualization_exercises/exercise11/calories.csv"
df_ex11 <- read_csv(file_path)
formatted_table(head(df_ex11))
df_ex11 <- df_ex11 %>%
separate_wider_delim(Cals_per100grams, delim = " ", names = c("Cals_per100grams", "waste")) %>%
separate_wider_delim(KJ_per100grams, delim = " ", names = c("KJ_per100grams", "waste2")) %>%
select (-c(waste, waste2)) %>% #Note that this is a negative selection. Selects all but the listed columns.
mutate_at(c('Cals_per100grams', 'KJ_per100grams'), as.numeric) #Creates numbers from strings
formatted_table(head(df_ex11))
df_ex11_summ <- df_ex11 %>%
group_by(FoodCategory) %>%
summarize("Energy density (KJ/100 g)" = round(mean(`KJ_per100grams`), 1))
formatted_table(head(df_ex11_summ))
barplot(df_ex11_summ$`Energy density (KJ/100 g)`,
ylab = "Energy density (KJ/100 g)",
ylim = c(0, max(df_ex11_summ$`Energy density (KJ/100 g)` + 1000)),
names = df_ex11_summ$`FoodCategory`,
las = 2,
cex.names = 0.5,
col = "steelblue",
main = "Energy Density per food catagory")
knitr::opts_chunk$set(warning = FALSE, message = FALSE)
library("tidyverse")
#Your code here
#Your code here
#Your code here
#Your code here
#Your code here
#Your code here
#Your code here
#Your code here
#Your code here
#Your code here
#Your code here
knitr::opts_chunk$set(warning = FALSE, message = FALSE)
library("tidyverse")
library(kableExtra)
formatted_table <- function(df){
kbl(df) %>%
kable_styling(bootstrap_options = c("striped", "hover", "responsive"))
}
file_path_ex1 <- "./files_13_data_visualization_exercises/exercise01/Food_Product_Emissions.csv"
df_ex1 <- read_csv(file_path_ex1)
formatted_table(head(df_ex1))
barplot(df_ex1$`Total Global Average GHG Emissions per kg`,
ylab = "Total Global Average GHG Emissions per kg",
ylim = c(0, max(df_ex1$`Total Global Average GHG Emissions per kg` + 20)),
names = df_ex1$`Food product`,
las = 2,
cex.names = 0.5,
col = "steelblue",
main = "Food Product Emissions")
log2(8)
`Log2 Total Global Average GHG Emissions per kg` <- log2(df_ex1$`Total Global Average GHG Emissions per kg`)
df_ex2 <- df_ex1 %>%
add_column(`Log2 Total Global Average GHG Emissions per kg`)
formatted_table(head(df_ex2))
barplot(df_ex2$`Log2 Total Global Average GHG Emissions per kg`,
ylab = "Log2 Total Global Average GHG Emissions per kg",
ylim = c(min(df_ex2$`Log2 Total Global Average GHG Emissions per kg` - 4), max(df_ex2$`Log2 Total Global Average GHG Emissions per kg` + 4)),
names = df_ex2$`Food product`,
las = 2,
cex.names = 0.5,
col = "steelblue",
main = "Food Product Emissions")
df_ex3 <- df_ex1[str_detect(df_ex1$`Food product`, "Oil"), ]
formatted_table(df_ex3)
df_ex3$`Land Use Change` <- NULL
df_ex3$Feed <- NULL
df_ex3 <- df_ex3[, 1:6]
formatted_table(df_ex3)
tidy_df_ex3 <- df_ex3 %>%
gather(`Farm`, `Processing`, `Transport`, `Packaging`, `Retail`, key = "Emission origin", value = "Emission per kg")
formatted_table(head(tidy_df_ex3))
p <- ggplot(data = tidy_df_ex3, aes(x = `Food product`, y = `Emission per kg`, fill = `Emission origin`)) +
geom_bar(stat = "identity", position="dodge") +
labs(title="Food Product Emissions") +
theme(axis.text.x = element_text(angle = 45, hjust=1))
p
p <- ggplot(data = tidy_df_ex3, aes(x = `Food product`, y = `Emission per kg`, fill = `Emission origin`)) +
geom_bar(stat = "identity", position="stack") +
labs(title="Food Product Emissions") +
theme(axis.text.x = element_text(angle = 45, hjust=1))
p
p <- ggplot(data = tidy_df_ex3, aes(x = `Food product`, y = `Emission per kg`, fill = `Emission origin`)) +
geom_bar(stat = "identity", position="fill") +
labs(title="Food Product Emissions") +
theme(axis.text.x = element_text(angle = 45, hjust=1))
p
p <- ggplot(tidy_df_ex3, aes(x = "", y = `Emission per kg`, fill = `Emission origin`)) +
geom_bar(stat="identity", width=1) +
coord_polar("y", start=0) +
labs(title="Food Product Emissions") +
theme_void() # remove background, grid, numeric labels
p
file_path <- "./files_13_data_visualization_exercises/exercise07/calories.csv"
df_ex7 <- read_csv(file_path)
formatted_table(head(df_ex7))
df_ex7 <- df_ex7 %>%
separate_wider_delim(Cals_per100grams, delim = " ", names = c("Cals_per100grams", "waste")) %>%
separate_wider_delim(KJ_per100grams, delim = " ", names = c("KJ_per100grams", "waste2")) %>%
select (-c(waste, waste2)) %>% #Note that this is a negative selection. Selects all but the listed columns.
mutate_at(c('Cals_per100grams', 'KJ_per100grams'), as.numeric) #Creates numbers from strings
formatted_table(head(df_ex7))
p <- ggplot(df_ex7, aes(x = `FoodCategory`, y = `KJ_per100grams`)) +
geom_boxplot() +
labs(title="Energy per weight in different food categories") +
theme(axis.text.x = element_text(angle = 45, hjust=1)) +
ylab("Energy Density (KJ per 100 grams)") +
xlab("Food Category")
p
file_path <- "./files_13_data_visualization_exercises/exercise08/ChickWeight.csv"
df_ex8 <- read_tsv(file_path)
formatted_table(df_ex8)
library(ggradar)
df_ex8_scaled <- df_ex8[, -1]/400
formatted_table(df_ex8_scaled)
first_col <- df_ex8[, 1]
formatted_table(first_col)
df_ex8_mod <- cbind(first_col, df_ex8_scaled)
formatted_table(df_ex8_mod)
p <- ggradar(df_ex8_mod,  legend.text.size = 8, values.radar = c("0", "200", "400"), axis.label.size = 3, grid.label.size = 3, legend.position = "right") +
labs(title = "Chick weight from different diets at day 42") +
theme(plot.title = element_text(size = 14, ))
p
file_path <- "./files_13_data_visualization_exercises/exercise09/data.csv"
df_ex9 <- read_delim(file_path, delim=" ")
df_ex9$...6 <- NULL
formatted_table(head(df_ex9))
p <- ggplot(df_ex9, aes(x = `Potassium_conc`, y = `Sodium_conc`)) +
geom_point(aes(size = `Calories`), alpha = 0.5) +
scale_size(range = c(0.5, 12)) +
geom_text(aes(label=Item)) +
xlab("Potassium concentration (mg/100 g)") +
ylab("Sodium concentration (mg/100 g)")
p
file_path <- "./files_13_data_visualization_exercises/exercise10/meat-production-tonnes.csv"
df_ex10 <- read_csv(file_path)
df_ex10 <- rename(df_ex10, `Total mass (tonnes)`= `Meat, total | 00001765 || Production | 005510 || tonnes`)
formatted_table(head(df_ex10))
df_ex10_asia <- df_ex10 %>%
filter(Entity == "Asia")
formatted_table(head(df_ex10_asia))
p <- ggplot(data= df_ex10_asia, aes(x = Year, y = `Total mass (tonnes)`)) +
geom_line() +
labs(title="Meat production in Asia")
p
p <- ggplot(data= df_ex10_asia, aes(x = Year, y = `Total mass (tonnes)`)) +
geom_point() +
labs(title="Meat production in Asia")
p
file_path <- "./files_13_data_visualization_exercises/exercise11/calories.csv"
df_ex11 <- read_csv(file_path)
formatted_table(head(df_ex11))
df_ex11 <- df_ex11 %>%
separate_wider_delim(Cals_per100grams, delim = " ", names = c("Cals_per100grams", "waste")) %>%
separate_wider_delim(KJ_per100grams, delim = " ", names = c("KJ_per100grams", "waste2")) %>%
select (-c(waste, waste2)) %>% #Note that this is a negative selection. Selects all but the listed columns.
mutate_at(c('Cals_per100grams', 'KJ_per100grams'), as.numeric) #Creates numbers from strings
formatted_table(head(df_ex11))
df_ex11_summ <- df_ex11 %>%
group_by(FoodCategory) %>%
summarize("Energy density (KJ/100 g)" = round(mean(`KJ_per100grams`), 1))
formatted_table(head(df_ex11_summ))
barplot(df_ex11_summ$`Energy density (KJ/100 g)`,
ylab = "Energy density (KJ/100 g)",
ylim = c(0, max(df_ex11_summ$`Energy density (KJ/100 g)` + 1000)),
names = df_ex11_summ$`FoodCategory`,
las = 2,
cex.names = 0.5,
col = "steelblue",
main = "Energy Density per food catagory")
knitr::opts_chunk$set(warning = FALSE, message = FALSE)
library(kableExtra)
formatted_table <- function(df){
kbl(df) %>%
kable_styling(bootstrap_options = c("striped", "hover", "responsive"))
}
library(tidyverse)
category <- c("fruit", "vegetable", "vegetable", "fruit")
type <- c("apple", "broccoli", "cauliflower", "banana")
calories <- c(52.5, 34.2, 25.7, 89.4)
my_tibble <- tibble(category, type, calories)
formatted_table(head(my_tibble))
file_path <- "./files_03_data_import/file01_food_composition.csv"
my_df <- read_csv(file_path)
formatted_table(head(my_df))
URL <- "https://github.com/bml-research/data_analysis/raw/main/R/files_03_data_import/file01_food_composition.csv"
my_df <- read_csv(URL)
formatted_table(head(my_df))
file_path <- "./files_03_data_import/file02_fruits.csv"
my_df <- read_csv2(file_path)
formatted_table(head(my_df))
file_path <- "./files_03_data_import/file02_fruits.csv"
my_df <- read_csv(file_path) #note that read_csv was used instead of read_csv2
formatted_table(head(my_df))
file_path <- "./files_03_data_import/file03_fruits.csv"
my_df <- read_csv2(file_path)
formatted_table(head(my_df))
?read_csv2
file_path <- "./files_03_data_import/file03_fruits.csv"
my_df <- read_csv2(file_path, col_names = FALSE)
formatted_table(head(my_df))
my_col_names <- c("category", "type", "calories")
names(my_df) <- my_col_names
formatted_table(head(my_df))
file_path <- "./files_03_data_import/file04_fruits.csv"
my_df <- read_csv2(file_path)
formatted_table(head(my_df))
file_path <- "./files_03_data_import/file05_fruits.csv"
my_df <- read_tsv(file_path)
formatted_table(head(my_df))
file_path <- "./files_03_data_import/file06_fruits.csv"
my_df <- read_csv2(file_path)
formatted_table(head(my_df))
file_path <- "./files_03_data_import/file06_fruits.csv"
my_df <- read_delim(file_path, delim = "*", comment = "@", locale=locale(decimal_mark = ","))
formatted_table(head(my_df))
category <- c("fruit", "vegetable", "vegetable", "fruit")
type <- c("apple", "broccoli", "cauliflower", "banana")
calories <- c(52.5, 34.2, 25.7, 89.4)
my_tibble <- tibble(category, type, calories)
write_csv(my_tibble, "./files_03_data_import/file07_tibble.csv")
my_path <- "./files_03_data_import/file07_tibble.csv"
my_df <- read_csv(my_path)
formatted_table(head(my_df))
library(readxl)
file_path <- "./files_03_data_import/file08_food_composition.xlsx"
my_df <- read_excel(file_path)
formatted_table(head(my_df))
library(openxlsx)
category <- c("fruit", "vegetable", "vegetable", "fruit")
type <- c("apple", "broccoli", "cauliflower", "banana")
calories <- c(52.5, 34.2, 25.7, 89.4)
my_tibble <- tibble(category, type, calories)
write.xlsx(my_tibble, './files_03_data_import/file09_tibble.xlsx', colNames = TRUE)
knitr::opts_chunk$set(warning = FALSE, message = FALSE)
library(tidyverse)
library(kableExtra)
formatted_table <- function(df){
kbl(df) %>%
kable_styling(bootstrap_options = c("striped", "hover", "responsive"))
}
category <- c("fruit", "vegetable", "vegetable", "fruit")
type <- c("apple", "broccoli", "cauliflower", "banana")
calories <- c(52.5, NA, NA, 89.4)
my_tibble <- tibble(category, type, calories)
formatted_table(head(my_tibble))
my_tibble <- drop_na(my_tibble)
formatted_table(my_tibble)
my_tibble <- my_tibble %>% drop_na()
formatted_table(my_tibble)
category <- c("fruit", "vegetable", "vegetable", "fruit")
x <- c("apple", "broccoli", "cauliflower", "banana")
calories <- c(52.5, 32.2, 25.7, 89.4)
my_tibble <- tibble(category, x, calories)
formatted_table(my_tibble)
my_tibble <- my_tibble %>% rename(type = x)
formatted_table(my_tibble)
category <- c("fruit", "vegetable", "vegetable", "fruit")
type <- c("apple", "broccoli", "cauliflower", "banana")
calories <- c(52.5, 32.2, 25.7, 89.4)
my_tibble <- tibble(category, calories, type)
formatted_table(my_tibble)
my_tibble <- my_tibble %>% select(category, type, calories)
formatted_table(my_tibble)
category <- c("fruit", "vegetable", "vegetable", "fruit")
x <- c("apple", "broccoli", "cauliflower", "banana")
calories <- c(52.5, 32.2, "25.7", 89.4) # Note that this vector contains a string.
my_tibble <- tibble(category, type, calories)
my_tibble
my_tibble <- my_tibble %>% mutate(calories = as.numeric(calories))
my_tibble
my_path = './files_06_data_cleaning/file01_fruits.csv'
my_df <- read_csv2(my_path)
formatted_table(my_df)
my_path = './files_06_data_cleaning/file01_fruits.csv'
my_df <- read_csv2(my_path, na = "/")
formatted_table(my_df)
my_path = './files_06_data_cleaning/file02_fruits.csv'
my_df <- read_csv2(my_path)
formatted_table(my_df)
my_path = './files_06_data_cleaning/file02_fruits.csv'
my_df <- read_csv2(my_path, na = c("/", "-"))
formatted_table(my_df)
library(readxl)
my_path = './files_06_data_cleaning/file03_fruits.xlsx'
my_df <- read_excel(my_path)
formatted_table(my_df)
my_path = './files_06_data_cleaning/file03_fruits.xlsx'
my_df <- read_excel(my_path, na=  c("/", "-"))
formatted_table(my_df)
my_path = './files_06_data_cleaning/file04_fruits.xlsx'
my_df <- read_excel(my_path)
formatted_table(my_df)
category <- c("fruit", "vegetable", "vegetable", "fruit")
type <- c("apple", "broccoli", "cauliflower", "banana")
calories <- c(52.5, 999,25.7, 89.4)
my_tibble <- tibble(category, type, calories)
formatted_table(my_tibble)
my_tibble[2,3] <- 34.2
formatted_table(my_tibble)
my_tibble <- my_tibble %>% add_row(category = "fruit", type = "mango", calories = 104)
formatted_table(my_tibble)
my_tibble <- my_tibble %>% filter(!type == "mango")
formatted_table(my_tibble)
my_tibble <- my_tibble %>% add_row(category  = "fruit", type = "pineapple", calories = 105)
formatted_table(my_tibble)
my_tibble <- my_tibble %>% mutate(category = str_replace(category, "fruit", "fruits"))
formatted_table(my_tibble)
my_tibble <- my_tibble %>% mutate(category = str_replace(category, "vegetable", "vegetables"))
formatted_table(my_tibble)
category <- c("-", "vegetable", "-", "fruit")
type <- c("apple", "-", "cauliflower", "banana")
calories <- c(52.5, "-", "-", 89.4)
my_tibble <- tibble(category, type, calories)
formatted_table(my_tibble)
my_tibble <- my_tibble %>% replace(. == "-", NA)
formatted_table(my_tibble)
knitr::opts_chunk$set(warning = FALSE, message = FALSE)
library(tidyverse)
library(kableExtra)
formatted_table <- function(df){
kbl(df) %>%
kable_styling(bootstrap_options = c("striped", "hover", "responsive"))
}
category <- c("fruit", "vegetable", "vegetable", "fruit")
type <- c("apple", "broccoli", "cauliflower", "banana")
calories <- c(52.5, NA, NA, 89.4)
my_tibble <- tibble(category, type, calories)
formatted_table(head(my_tibble))
my_tibble <- drop_na(my_tibble)
formatted_table(my_tibble)
my_tibble <- my_tibble %>% drop_na()
formatted_table(my_tibble)
category <- c("fruit", "vegetable", "vegetable", "fruit")
x <- c("apple", "broccoli", "cauliflower", "banana")
calories <- c(52.5, 32.2, 25.7, 89.4)
my_tibble <- tibble(category, x, calories)
formatted_table(my_tibble)
my_tibble <- my_tibble %>% rename(type = x)
formatted_table(my_tibble)
category <- c("fruit", "vegetable", "vegetable", "fruit")
type <- c("apple", "broccoli", "cauliflower", "banana")
calories <- c(52.5, 32.2, 25.7, 89.4)
my_tibble <- tibble(category, calories, type)
formatted_table(my_tibble)
my_tibble <- my_tibble %>% select(category, type, calories)
formatted_table(my_tibble)
category <- c("fruit", "vegetable", "vegetable", "fruit")
x <- c("apple", "broccoli", "cauliflower", "banana")
calories <- c(52.5, 32.2, "25.7", 89.4) # Note that this vector contains a string.
my_tibble <- tibble(category, type, calories)
my_tibble
my_path = './files_06_data_cleaning/file01_fruits.csv'
my_df <- read_csv2(my_path)
formatted_table(my_df)
my_path = './files_06_data_cleaning/file01_fruits.csv'
my_df <- read_csv2(my_path, na = "/")
formatted_table(my_df)
my_path = './files_06_data_cleaning/file02_fruits.csv'
my_df <- read_csv2(my_path)
formatted_table(my_df)
my_path = './files_06_data_cleaning/file02_fruits.csv'
my_df <- read_csv2(my_path, na = c("/", "-"))
formatted_table(my_df)
