df <- read_csv(file_path)
formatted_table(head(df))
formatted_table(df[2, ]) #select second row
formatted_table(head(df[, 4])) #select fourth column
head(df$Calories) #select column Calories
formatted_table(df[2, 4]) #select second row and fourth column
formatted_table(head(filter(df, Calories > 900)))
formatted_table(filter(df, Category == "Chicken & Fish" & Calories > 900))
formatted_table(head(filter(df, !Category == "Chicken & Fish" & Calories > 900)))
formatted_table(head(filter(df, Calories < 100 | Calories > 900)))
formatted_table(head(filter(df, Calories == 0)))
formatted_table(head(arrange(df, Calories)))
formatted_table(head(arrange(df, desc(Calories))))
formatted_table(arrange(df, desc(Calories))[1, ])
formatted_table(head(arrange(df, Category, Calories)))
formatted_table(head(arrange(df, Category, desc(Calories))))
formatted_table(head(select(df, Category, Item, Calories)))
formatted_table(head(select(df, -Calories)))
formatted_table(head(select(df, Category, Item, starts_with("total"))))
summary(df)
summary(df$Calories)
formatted_table(summarize(df, Calories = mean(Calories)))
by_category <- group_by(df, Category)
formatted_table(summarize(by_category, Average_calories = mean(Calories)))
by_category <- group_by(df, Category)
formatted_table(summarize(by_category, average_calories = mean(Calories), average_calories_fat = mean(`Calories from Fat`)))
by_category <- group_by(df, Category)
formatted_table(summarize(by_category, average_calories = mean(Calories), sd_calories = sd(Calories), average_calories_fat = mean(`Calories from Fat`), sd_calories_from_fat = sd(`Calories from Fat`)))
round(2.40, digits = 1)
round(2.45, digits = 1)
round(2.45) #defaults to 0 digits
round(2.5) #defaults to 0 digits
?round
by_category <- group_by(df, Category)
formatted_table(summarize(by_category, average_calories = round(mean(Calories)), sd_calories = round(sd(Calories)), average_calories_fat = round(mean(`Calories from Fat`)), sd_calories_from_fat = round(sd(`Calories from Fat`))))
print("mean")
mean(df$Calories)
print("min")
min(df$Calories)
print("max")
max(df$Calories)
print("median")
median(df$Calories)
print("percentile")
quantile(df$Calories, c(0.25, 0.5, 0.75))
print("standard deviation")
sd(df$Calories)
print("standard error of the mean")
sd(df$Calories)/sqrt(length(df$Calories)) #can also be calculated using the plotrix package
by_category <- group_by(df, Category)
formatted_table(summarize_each(by_category, funs(mean, sd, se=sd(.)/sqrt(n()))))
by_category <- group_by(df, Category)
formatted_table(summarize_each(by_category, funs(mean, sd, se=sd(.)/sqrt(n()))) %>%
select(-Item_mean, -`Serving Size_mean`))
formatted_table(df %>%
group_by(Category) %>%
summarize_each(funs(mean, sd, se=sd(.)/sqrt(n()))) %>%
select(-Item_mean, -`Serving Size_mean`))
formatted_table(head(df)) %>% filter(Calories > 900)
df %>% filter(Calories > 900)
result <- df %>% filter(Calories > 900)
formatted_table(head(result)
result <- df %>% filter(Calories > 900)
formatted_table(head(result))
result <- filter(df, Category == "Chicken & Fish" & Calories > 900)
formatted_table(head(result))
result <- df %>% filter(Category == "Chicken & Fish" & Calories > 900)
formatted_table(head(result))
result <- df %>% filter(df, !Category == "Chicken & Fish" & Calories > 900)
result <- df %>% filter(!Category == "Chicken & Fish" & Calories > 900)
formatted_table(head(result))
result <- df %>% filter(Calories < 100 | Calories > 900)
formatted_table(head(result))
result <- df %>% filter(df, Calories == 0)
result <- df %>% filter(Calories == 0)
formatted_table(head(result))
sorted_df <- df %>% arrange(Calories)
formatted_table(head(sorted_df))
formatted_table(head(arrange(df, Calories)))
knitr::opts_chunk$set(warning = FALSE, message = FALSE)
library(tidyverse)
library(kableExtra)
formatted_table <- function(df){
kbl(df) %>%
kable_styling(bootstrap_options = c("striped", "hover", "responsive"))
}
file_path <- "./files_09_data_analysis/file01_menu.csv"
df <- read_csv(file_path)
formatted_table(head(df))
formatted_table(df[2, ]) #select second row
formatted_table(head(df[, 4])) #select fourth column
head(df$Calories) #select column Calories
formatted_table(df[2, 4]) #select second row and fourth column
formatted_table(head(filter(df, Calories > 900)))
formatted_table(filter(df, Category == "Chicken & Fish" & Calories > 900))
formatted_table(head(filter(df, !Category == "Chicken & Fish" & Calories > 900)))
formatted_table(head(filter(df, Calories < 100 | Calories > 900)))
formatted_table(head(filter(df, Calories == 0)))
formatted_table(head(arrange(df, Calories)))
formatted_table(head(arrange(df, desc(Calories))))
formatted_table(arrange(df, desc(Calories))[1, ])
formatted_table(head(arrange(df, Category, Calories)))
formatted_table(head(arrange(df, Category, desc(Calories))))
formatted_table(head(select(df, Category, Item, Calories)))
formatted_table(head(select(df, -Calories)))
formatted_table(head(select(df, Category, Item, starts_with("total"))))
summary(df)
summary(df$Calories)
formatted_table(summarize(df, Calories = mean(Calories)))
by_category <- group_by(df, Category)
formatted_table(summarize(by_category, Average_calories = mean(Calories)))
by_category <- group_by(df, Category)
formatted_table(summarize(by_category, average_calories = mean(Calories), average_calories_fat = mean(`Calories from Fat`)))
by_category <- group_by(df, Category)
formatted_table(summarize(by_category, average_calories = mean(Calories), sd_calories = sd(Calories), average_calories_fat = mean(`Calories from Fat`), sd_calories_from_fat = sd(`Calories from Fat`)))
round(2.40, digits = 1)
round(2.45, digits = 1)
round(2.45) #defaults to 0 digits
round(2.5) #defaults to 0 digits
?round
by_category <- group_by(df, Category)
formatted_table(summarize(by_category, average_calories = round(mean(Calories)), sd_calories = round(sd(Calories)), average_calories_fat = round(mean(`Calories from Fat`)), sd_calories_from_fat = round(sd(`Calories from Fat`))))
print("mean")
mean(df$Calories)
print("min")
min(df$Calories)
print("max")
max(df$Calories)
print("median")
median(df$Calories)
print("percentile")
quantile(df$Calories, c(0.25, 0.5, 0.75))
print("standard deviation")
sd(df$Calories)
print("standard error of the mean")
sd(df$Calories)/sqrt(length(df$Calories)) #can also be calculated using the plotrix package
by_category <- group_by(df, Category)
formatted_table(summarize_each(by_category, funs(mean, sd, se=sd(.)/sqrt(n()))))
by_category <- group_by(df, Category)
formatted_table(summarize_each(by_category, funs(mean, sd, se=sd(.)/sqrt(n()))) %>%
select(-Item_mean, -`Serving Size_mean`))
formatted_table(df %>%
group_by(Category) %>%
summarize_each(funs(mean, sd, se=sd(.)/sqrt(n()))) %>%
select(-Item_mean, -`Serving Size_mean`))
?summary
?summarise
by_category <- group_by(df, Category)
formatted_table(summarize_each(by_category, funs(mean, sd, se=sd(.)/sqrt(n()))))
by_category <- group_by(df, Category)
formatted_table(summarize_each(by_category, funs(mean, sd, se=sd(.)/sqrt(n()))) %>%
select(-Item_mean, -`Serving Size_mean`))
formatted_table(df %>%
group_by(Category) %>%
summarize_each(funs(mean, sd, se=sd(.)/sqrt(n()))) %>%
select(-Item_mean, -`Serving Size_mean`))
by_category <- group_by(df, Category)
#formatted_table(summarize_each(by_category, funs(mean, sd, se=sd(.)/sqrt(n()))))
summarise(across(by_category, list(mean = mean, sd = sd)))
by_category <- group_by(df, Category)
#formatted_table(summarize_each(by_category, funs(mean, sd, se=sd(.)/sqrt(n()))))
summarise(by_category, across(list(mean = mean, sd = sd)))
by_category <- group_by(df, Category)
#formatted_table(summarize_each(by_category, funs(mean, sd, se=sd(.)/sqrt(n()))))
summarise(across(list(mean = mean, sd = sd)))
by_category <- group_by(df, Category)
#formatted_table(summarize_each(by_category, funs(mean, sd, se=sd(.)/sqrt(n()))))
by_category %>% summarise(across(list(mean = mean, sd = sd)))
by_category <- group_by(df, Category)
formatted_table(summarize_each(by_category, funs(mean, sd, se=sd(.)/sqrt(n()))))
by_category <- group_by(df, Category)
formatted_table(summarize_each(by_category, funs(mean, sd, se=sd(.)/sqrt(n()))))
by_category <- group_by(df, Category)
formatted_table(summarize_each(by_category, funs(mean, sd, se=sd(.)/sqrt(n()))) %>%
select(-Item_mean, -`Serving Size_mean`))
formatted_table(df %>%
group_by(Category) %>%
summarize_each(funs(mean, sd, se=sd(.)/sqrt(n()))) %>%
select(-Item_mean, -`Serving Size_mean`))
iris %>%
group_by(Species) %>%
summarise(across(starts_with("Sepal"), list(mean = mean, sd = sd)))
df %>%
group_by(Category) %>%
summarise(across(4:, list(mean = mean, sd = sd)))
df %>%
group_by(Category) %>%
summarise(across(4:8, list(mean = mean, sd = sd)))
df %>%
group_by(Category) %>%
summarise(across(everything(), list(mean = mean, sd = sd)))
df %>%
group_by(Category) %>%
summarize(across(everything(), list(mean = mean, sd = sd)))
df %>%
group_by(Category) %>%
summarize(across(everything(), list(mean = mean, sd = sd, se=sd(.)/sqrt(n())))
df %>%
group_by(Category) %>%
summarize(across(everything(), list(mean = mean, sd = sd, se=sd(.)/sqrt(n())))
df %>%
group_by(Category) %>%
summarize(across(everything(), list(mean = mean, sd = sd, se=sd(.)/sqrt(n()))))
df %>%
group_by(Category) %>%
summarize(across(everything(), list(mean = mean, sd = sd)))
df %>%
group_by(Category) %>%
summarize(across(everything(), list(mean = mean, sd = sd, se=sd(.)/sqrt(n()))))
df %>%
group_by(Category) %>%
summarize(across(everything(), list(mean = mean, sd = sd)))
df %>%
group_by(Category) %>%
summarize_all(list(mean = mean, sd = sd))
df
df %>%
group_by(Category) %>%
summarize(across(-c(`Item`, `Serving Size`), list(mean = mean, sd = sd)))
df %>%
group_by(Category) %>%
summarize(across(-c(`Item`, `Serving Size`), list(mean = mean, sd = sd)))
df %>%
group_by(Category) %>%
summarize(across(-c(`Item`, `Serving Size`), list(mean = mean, sd = sd, se=sd(.)/sqrt(n()))))
df %>%
group_by(Category) %>%
summarize(across(-c(`Item`, `Serving Size`), list(mean = mean, sd = sd)))
by_category <- group_by(df, Category)
formatted_table(summarize_each(by_category, funs(mean, sd, )) %>%
select(-Item_mean, -`Serving Size_mean`))
by_category <- group_by(df, Category)
formatted_table(summarize_each(by_category, funs(mean, sd)))
by_category <- group_by(df, Category)
formatted_table(summarize_each(by_category, funs(mean, sd)))
by_category <- group_by(df, Category)
formatted_table(summarize_each(by_category, funs(mean, sd, se=sd(.)/sqrt(n()))) %>%
select(-Item_mean, -`Serving Size_mean`))
by_category <- group_by(df, Category)
formatted_table(summarize_each(by_category, funs(mean, sd)) %>%
select(-Item_mean, -`Serving Size_mean`))
formatted_table(df %>%
group_by(Category) %>%
summarize_each(funs(mean, sd)) %>%
select(-Item_mean, -`Serving Size_mean`))
knitr::opts_chunk$set(warning = FALSE, message = FALSE)
library(tidyverse)
library(kableExtra)
formatted_table <- function(df){
kbl(df) %>%
kable_styling(bootstrap_options = c("striped", "hover", "responsive"))
}
file_path <- "./files_09_data_analysis/file01_menu.csv"
df <- read_csv(file_path)
formatted_table(head(df))
formatted_table(df[2, ]) #select second row
formatted_table(head(df[, 4])) #select fourth column
head(df$Calories) #select column Calories
formatted_table(df[2, 4]) #select second row and fourth column
formatted_table(head(filter(df, Calories > 900)))
formatted_table(filter(df, Category == "Chicken & Fish" & Calories > 900))
formatted_table(head(filter(df, !Category == "Chicken & Fish" & Calories > 900)))
formatted_table(head(filter(df, Calories < 100 | Calories > 900)))
formatted_table(head(filter(df, Calories == 0)))
formatted_table(head(arrange(df, Calories)))
formatted_table(head(arrange(df, desc(Calories))))
formatted_table(arrange(df, desc(Calories))[1, ])
formatted_table(head(arrange(df, Category, Calories)))
formatted_table(head(arrange(df, Category, desc(Calories))))
formatted_table(head(select(df, Category, Item, Calories)))
formatted_table(head(select(df, -Calories)))
formatted_table(head(select(df, Category, Item, starts_with("total"))))
summary(df)
summary(df$Calories)
formatted_table(summarize(df, Calories = mean(Calories)))
by_category <- group_by(df, Category)
formatted_table(summarize(by_category, Average_calories = mean(Calories)))
by_category <- group_by(df, Category)
formatted_table(summarize(by_category, average_calories = mean(Calories), average_calories_fat = mean(`Calories from Fat`)))
by_category <- group_by(df, Category)
formatted_table(summarize(by_category, average_calories = mean(Calories), sd_calories = sd(Calories), average_calories_fat = mean(`Calories from Fat`), sd_calories_from_fat = sd(`Calories from Fat`)))
round(2.40, digits = 1)
round(2.45, digits = 1)
round(2.45) #defaults to 0 digits
round(2.5) #defaults to 0 digits
by_category <- group_by(df, Category)
formatted_table(summarize(by_category, average_calories = round(mean(Calories)), sd_calories = round(sd(Calories)), average_calories_fat = round(mean(`Calories from Fat`)), sd_calories_from_fat = round(sd(`Calories from Fat`))))
print("mean")
mean(df$Calories)
print("min")
min(df$Calories)
print("max")
max(df$Calories)
print("median")
median(df$Calories)
print("percentile")
quantile(df$Calories, c(0.25, 0.5, 0.75))
print("standard deviation")
sd(df$Calories)
print("standard error of the mean")
sd(df$Calories)/sqrt(length(df$Calories)) #can also be calculated using the plotrix package
by_category <- group_by(df, Category)
formatted_table(summarize_each(by_category, funs(mean, sd)))
by_category <- group_by(df, Category)
formatted_table(summarize_each(by_category, funs(mean, sd)) %>%
select(-Item_mean, -`Serving Size_mean`))
formatted_table(df %>%
group_by(Category) %>%
summarize_each(funs(mean, sd)) %>%
select(-Item_mean, -`Serving Size_mean`))
df %>%
group_by(Category) %>%
summarize(across(everything(), list(mean = mean, sd = sd)))
df %>%
group_by(Category) %>%
summarize_all(list(mean = mean, sd = sd))
df %>%
group_by(Category) %>%
summarize(across(-c(`Item`, `Serving Size`), list(mean = mean, sd = sd)))
knitr::opts_chunk$set(warning = FALSE, message = FALSE)
library(tidyverse)
library(kableExtra)
formatted_table <- function(df){
kbl(df) %>%
kable_styling(bootstrap_options = c("striped", "hover", "responsive"))
}
category <- c("fruit", "vegetable", "vegetable", "fruit")
type <- c("apple", "broccoli", "cauliflower", "banana")
calories <- c(52.5, NA, NA, 89.4)
my_tibble <- tibble(category, type, calories)
formatted_table(head(my_tibble))
my_tibble <- drop_na(my_tibble)
formatted_table(my_tibble)
my_tibble <- my_tibble %>% drop_na()
formatted_table(my_tibble)
category <- c("fruit", "vegetable", "vegetable", "fruit")
x <- c("apple", "broccoli", "cauliflower", "banana")
calories <- c(52.5, 32.2, 25.7, 89.4)
my_tibble <- tibble(category, x, calories)
formatted_table(my_tibble)
my_tibble <- my_tibble %>% rename(type = x)
formatted_table(my_tibble)
category <- c("fruit", "vegetable", "vegetable", "fruit")
type <- c("apple", "broccoli", "cauliflower", "banana")
calories <- c(52.5, 32.2, 25.7, 89.4)
my_tibble <- tibble(category, calories, type)
formatted_table(my_tibble)
my_tibble <- my_tibble %>% select(category, type, calories)
formatted_table(my_tibble)
category <- c("fruit", "vegetable", "vegetable", "fruit")
x <- c("apple", "broccoli", "cauliflower", "banana")
calories <- c(52.5, 32.2, "25.7", 89.4) # Note that this vector contains a string.
my_tibble <- tibble(category, type, calories)
my_tibble
my_tibble <- my_tibble %>% mutate(calories = as.numeric(calories))
my_tibble
my_path = './files_06_data_cleaning/file01_fruits.csv'
my_df <- read_csv2(my_path)
formatted_table(my_df)
my_path = './files_06_data_cleaning/file01_fruits.csv'
my_df <- read_csv2(my_path, na = "/")
formatted_table(my_df)
my_path = './files_06_data_cleaning/file02_fruits.csv'
my_df <- read_csv2(my_path)
formatted_table(my_df)
my_path = './files_06_data_cleaning/file02_fruits.csv'
my_df <- read_csv2(my_path, na = c("/", "-"))
formatted_table(my_df)
library(readxl)
my_path = './files_06_data_cleaning/file03_fruits.xlsx'
my_df <- read_excel(my_path)
formatted_table(my_df)
my_path = './files_06_data_cleaning/file03_fruits.xlsx'
my_df <- read_excel(my_path, na=  c("/", "-"))
formatted_table(my_df)
my_path = './files_06_data_cleaning/file04_fruits.xlsx'
my_df <- read_excel(my_path)
formatted_table(my_df)
category <- c("fruit", "vegetable", "vegetable", "fruit")
type <- c("apple", "broccoli", "cauliflower", "banana")
calories <- c(52.5, 999,25.7, 89.4)
my_tibble <- tibble(category, type, calories)
formatted_table(my_tibble)
my_tibble[2,3] <- 34.2
formatted_table(my_tibble)
my_tibble <- my_tibble %>% add_row(category = "fruit", type = "mango", calories = 104)
formatted_table(my_tibble)
my_tibble <- my_tibble %>% filter(!type == "mango")
formatted_table(my_tibble)
my_tibble <- my_tibble %>% add_row(category  = "fruit", type = "pineapple", calories = 105)
formatted_table(my_tibble)
my_tibble <- my_tibble %>% mutate(category = str_replace(category, "fruit", "fruits"))
formatted_table(my_tibble)
my_tibble <- my_tibble %>% mutate(category = str_replace(category, "vegetable", "vegetables"))
formatted_table(my_tibble)
category <- c("-", "vegetable", "-", "fruit")
type <- c("apple", "-", "cauliflower", "banana")
calories <- c(52.5, "-", "-", 89.4)
my_tibble <- tibble(category, type, calories)
formatted_table(my_tibble)
my_tibble <- my_tibble %>% replace(. == "-", NA)
formatted_table(my_tibble)
category <- c("fruit", "vegetable", "vegetable", "fruit")
type <- c("apple", "broccoli", "cauliflower", "banana")
calories_from_fat <- c(2.5, 2.6, 5.7, 9.4)
calories_from_sugar <- c(10.2, 5.5, 7.7, 10.2)
my_tibble <- tibble(category, type, calories_from_fat, calories_from_sugar)
formatted_table(my_tibble)
my_tibble_tidy <- my_tibble %>%
pivot_longer(calories_from_fat:calories_from_sugar, names_to = "calorie_type", values_to = "calories")
formatted_table(my_tibble_tidy)
my_tibble_wider <- my_tibble_tidy %>%
pivot_wider(names_from = "calorie_type", values_from = "calories")
formatted_table(my_tibble_wider)
record_1 = c("fruit", "apple", "52.5")
record_2 = c("vegetable", "broccoli", "32.2")
record_3 = c("vegetable", "cauliflower", "25.7")
record_4 = c(c("fruit", "banana", "89.4") )
my_tibble <- tibble(record_1, record_2, record_3, record_4)
formatted_table(my_tibble)
trans_matrix <- t(my_tibble)
formatted_table(trans_matrix)
my_tibble_transposed <- tibble(data.frame(trans_matrix))
formatted_table(my_tibble_transposed)
colnames(my_tibble_transposed) <- c("catogory", "type", "calories")
formatted_table(my_tibble_transposed)
my_tibble_transposed <- my_tibble_transposed %>% mutate(calories = as.numeric(calories))
formatted_table(my_tibble_transposed)
knitr::opts_chunk$set(warning = FALSE, message = FALSE)
formatted_table(df %>%
group_by(Category) %>%
summarize(across(everything(), list(mean = mean, sd = sd))))
knitr::opts_chunk$set(warning = FALSE, message = FALSE)
library(tidyverse)
library(kableExtra)
formatted_table <- function(df){
kbl(df) %>%
kable_styling(bootstrap_options = c("striped", "hover", "responsive"))
}
file_path <- "./files_09_data_analysis/file01_menu.csv"
df <- read_csv(file_path)
formatted_table(head(df))
formatted_table(df[2, ]) #select second row
formatted_table(head(df[, 4])) #select fourth column
head(df$Calories) #select column Calories
formatted_table(df[2, 4]) #select second row and fourth column
formatted_table(head(filter(df, Calories > 900)))
formatted_table(filter(df, Category == "Chicken & Fish" & Calories > 900))
formatted_table(head(filter(df, !Category == "Chicken & Fish" & Calories > 900)))
formatted_table(head(filter(df, Calories < 100 | Calories > 900)))
formatted_table(head(filter(df, Calories == 0)))
formatted_table(head(arrange(df, Calories)))
formatted_table(head(arrange(df, desc(Calories))))
formatted_table(arrange(df, desc(Calories))[1, ])
formatted_table(head(arrange(df, Category, Calories)))
formatted_table(head(arrange(df, Category, desc(Calories))))
formatted_table(head(select(df, Category, Item, Calories)))
formatted_table(head(select(df, -Calories)))
formatted_table(head(select(df, Category, Item, starts_with("total"))))
summary(df)
summary(df$Calories)
formatted_table(summarize(df, Calories = mean(Calories)))
by_category <- group_by(df, Category)
formatted_table(summarize(by_category, Average_calories = mean(Calories)))
by_category <- group_by(df, Category)
formatted_table(summarize(by_category, average_calories = mean(Calories), average_calories_fat = mean(`Calories from Fat`)))
by_category <- group_by(df, Category)
formatted_table(summarize(by_category, average_calories = mean(Calories), sd_calories = sd(Calories), average_calories_fat = mean(`Calories from Fat`), sd_calories_from_fat = sd(`Calories from Fat`)))
round(2.40, digits = 1)
round(2.45, digits = 1)
round(2.45) #defaults to 0 digits
round(2.5) #defaults to 0 digits
by_category <- group_by(df, Category)
formatted_table(summarize(by_category, average_calories = round(mean(Calories)), sd_calories = round(sd(Calories)), average_calories_fat = round(mean(`Calories from Fat`)), sd_calories_from_fat = round(sd(`Calories from Fat`))))
print("mean")
mean(df$Calories)
print("min")
min(df$Calories)
print("max")
max(df$Calories)
print("median")
median(df$Calories)
print("percentile")
quantile(df$Calories, c(0.25, 0.5, 0.75))
print("standard deviation")
sd(df$Calories)
print("standard error of the mean")
sd(df$Calories)/sqrt(length(df$Calories)) #can also be calculated using the plotrix package
by_category <- group_by(df, Category)
formatted_table(summarize_each(by_category, funs(mean, sd)))
by_category <- group_by(df, Category)
formatted_table(summarize_each(by_category, funs(mean, sd)) %>%
select(-Item_mean, -`Serving Size_mean`))
formatted_table(df %>%
group_by(Category) %>%
summarize_each(funs(mean, sd)) %>%
select(-Item_mean, -`Serving Size_mean`))
formatted_table(df %>%
group_by(Category) %>%
summarize(across(everything(), list(mean = mean, sd = sd))))
df %>%
group_by(Category) %>%
summarize_all(list(mean = mean, sd = sd))
df %>%
group_by(Category) %>%
summarize(across(-c(`Item`, `Serving Size`), list(mean = mean, sd = sd)))
formatted_table(df %>%
group_by(Category) %>%
summarize_all(list(mean = mean, sd = sd)))
formatted_table(df %>%
group_by(Category) %>%
summarize(across(-c(`Item`, `Serving Size`), list(mean = mean, sd = sd))))
